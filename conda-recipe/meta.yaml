{% set REPO_NAME   = environ.get('REPO_NAME',  'aligncount') %}
{% set VERSION     = environ.get('VERSION',    '0.2.78') %}
{% set TAR_URL     = environ.get('TAR_URL',    'https://github.com/vr1087/cpp-python-tool-template/archive/refs/tags/v0.2.78.tar.gz') %}
{% set SHA256      = environ.get('SHA256',     'c6d93172e84da45fc1b0f172d56b318f17b682d80edb03d6c0d9900938dee97a') %}
{% set REPO_HOME   = environ.get('REPO_HOME',  'https://github.com/vr1087/cpp-python-tool-template') %}

package:
  name: {{ REPO_NAME }}
  version: {{ VERSION }}

source:
  url:   {{ TAR_URL }}
  sha256: {{ SHA256 }}

build:
  detect_python: false
  script_env:
    - CFLAGS
    - CXXFLAGS
  script: |
    export CFLAGS="-I${PREFIX}/include $CFLAGS"
    export CXXFLAGS="-I${PREFIX}/include $CXXFLAGS"

    cmake -S cpp/standalone -B build/standalone \
      -DCMAKE_INSTALL_PREFIX=$PREFIX \
      -DCMAKE_BUILD_TYPE=Release
    cmake --build build/standalone --parallel ${CPU_COUNT:-1}
    cmake -S cpp/test -B build/test
    cmake --build build/test --parallel ${CPU_COUNT:-1}
    (cd build/test && ctest --output-on-failure)
    cmake --install build/standalone

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - autoconf
    - automake
    - libtool
    - m4
    - make
  host:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake

outputs:
  # ---------------------------------------------------------
  # Output #1: C++ executable package (aligncount)
  # ---------------------------------------------------------
  - name: aligncount

    requirements:
      host:
        - {{ compiler('c') }}
        - {{ compiler("cxx") }}
        - cmake
      run:
        - libcxx      # [osx]
        - libgcc-ng   # [linux]

  # ---------------------------------------------------------
  # Output #2: Python wrapper (noarch)
  # ---------------------------------------------------------
  - name: aligncount_wrapper
    build:
      noarch: python
      script: |
        cd cli
        python -m pip install . --no-deps --ignore-installed --prefix=$PREFIX
        cd ..

    requirements:
      build:
        - python >=3.9,<3.14
        - pip
        - setuptools
        - conda-verify
      host:
        - python >=3.9,<3.14
        - pip
        - setuptools
      run:
        - python >=3.9,<3.14
        - {{ pin_subpackage("aligncount", exact=False) }}

    test:
      requires:
        - pytest
      source_files:
        - tests/python/*.py
      commands:
        - pytest -q

about:
  home:    {{ REPO_HOME }}
  license: MIT
  summary: "C++ linecount + Python wrapper"
