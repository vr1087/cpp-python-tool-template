{% set REPO_NAME   = environ.get('REPO_NAME',  '') %}
{% set VERSION     = environ.get('VERSION',    '') %}
{% set TAR_URL     = environ.get('TAR_URL',    '') %}
{% set SHA256      = environ.get('SHA256',     '') %}
{% set REPO_HOME   = environ.get('REPO_HOME',  '') %}

package:
  name: {{ REPO_NAME }}
  version: {{ VERSION }}

source:
  url:   {{ TAR_URL }}
  sha256: {{ SHA256 }}

build:
  skip: true  # [win]
  detect_python: False
  script: |
    mkdir build
    cd build
    cmake .. -DCMAKE_INSTALL_PREFIX=$PREFIX
    cmake --build . --parallel ${CPU_COUNT:-1}
    cmake --install . --prefix $PREFIX
    cd ..
  number: 0

requirements:
  build:
    - {{ compiler("cxx") }}
    - cmake
  host:
    # This environment only needs to run CMake and the C++ compiler
    - {{ compiler("cxx") }}
    - cmake

outputs:
  # ---------------------------------------------------------
  # Output #1: Arch‐specific C++ executable (aligncount-cpp)
  # ---------------------------------------------------------
  - name: aligncount_cpp
    requirements:
      host:
        - {{ compiler("cxx") }}
        - cmake
      run:
        - {{ cdt("libcxx") }}   # or libgcc-ng on Linux

    # No separate script: top‐level build already installed
    # the C++ binary into $PREFIX/bin/aligncount_cpp

  # ---------------------------------------------------------
  # Output #2: Noarch Python wrapper (aligncount_demo)
  # ---------------------------------------------------------
  - name: aligncount
    noarch: python

    requirements:
      build:
        - python >=3.9,<3.14
        - pip
        - setuptools
      host:
        - python >=3.9,<3.14
        - pip
        - setuptools
      run:
        - python >=3.9,<3.14
        - {{ pin_subpackage(aligncount_cpp, exact=True) }}

    script: |
      cd cli
      $PYTHON -m pip install . --no-deps --ignore-installed --prefix=$PREFIX


about:
  home: {{ REPO_HOME }}
  license: MIT
  summary: "C++ linecount + Python wrapper"
