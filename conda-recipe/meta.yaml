{% set REPO_NAME   = environ.get('REPO_NAME',  '') %}
{% set VERSION     = environ.get('VERSION',    '') %}
{% set TAR_URL     = environ.get('TAR_URL',    '') %}
{% set SHA256      = environ.get('SHA256',     '') %}
{% set REPO_HOME   = environ.get('REPO_HOME',  '') %}

package:
  name: {{ REPO_NAME }}
  version: {{ VERSION }}

source:
  url:   {{ TAR_URL }}
  sha256: {{ SHA256 }}

build:
  detect_python: false
  script_env:
    - CFLAGS
    - CXXFLAGS
  script: |
    
    # On Linux aarch64 builds we saw undefined pthread symbols (e.g. pthread_join)
    # unless we compile and link with -pthread. Autotools (HTSlib) only picks up
    # Conda headers and flags if CFLAGS/CXXFLAGS and LDFLAGS are exported.
    # On macOS x86 (SDK < 10.15), Clangâ€™s availability annotations block newer
    # libc++ symbols (std::filesystem::path, etc.), so we disable those checks
    # with -D_LIBCPP_DISABLE_AVAILABILITY
    
    export CFLAGS="-pthread -I${PREFIX}/include $CFLAGS"
    export CXXFLAGS="-pthread -I${PREFIX}/include $CXXFLAGS -D_LIBCPP_DISABLE_AVAILABILITY"
    export LDFLAGS="-pthread ${LDFLAGS}"
    
    cmake -S cpp/all -B build -DCMAKE_INSTALL_PREFIX=$PREFIX -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS"
    cmake --build build --parallel ${CPU_COUNT:-1}
    (cd build/test && ctest --output-on-failure)
    cmake --install build/standalone
    cd cli
    python -m pip install . --no-deps --ignore-installed
    cd ..
    pytest tests/python

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - autoconf
    - automake
    - libtool
    - m4
    - make
    - python >=3.9,<3.14
    - pip
    - setuptools
    - conda-verify
    - pytest
  host:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
  run:
    - python >=3.9,<3.14
    - xz          # for liblzma for htslib
    - libcurl
    - bzip2
    - libzlib

about:
  home:    {{ REPO_HOME }}
  license: MIT
  summary: "C++ linecount + Python wrapper"
