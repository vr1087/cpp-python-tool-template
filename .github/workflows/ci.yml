name: CI Build & Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      # Make sure parallel builds use all available cores
      NUM_CORES: ${{ runner.ncpu }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      # ---------------------------
      # Part 1: C++ Build & CTest
      # ---------------------------

      - name: Install C++ build dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential cmake git python3-dev python3-pip

      - name: Configure and build C++ code
        working-directory: ${{ github.workspace }}
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --parallel "${NUM_CORES}"

      - name: Run C++ unit tests with CTest
        working-directory: ${{ github.workspace }}/build
        run: |
          ctest --output-on-failure

      # -----------------------------
      # Part 2: Python install & tests
      # -----------------------------

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Create & activate virtualenv
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip setuptools scikit-build pytest

      - name: Install package (C++ + Python wrapper) via pip
        working-directory: ${{ github.workspace }}
        run: |
          source venv/bin/activate
          pip install .

      - name: Run Python unit tests
        working-directory: ${{ github.workspace }}
        run: |
          source venv/bin/activate
          pytest -q
